name: 🌤️ Weather App CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'preview'
        type: choice
        options:
          - preview
          - production
      skip_tests:
        description: 'Skip tests for faster deployment'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  deployments: write
  pull-requests: write
  actions: read

env:
  NODE_VERSION: '22.x'
  CACHE_VERSION: v2
  # Optimize npm operations
  NPM_CONFIG_PREFER_OFFLINE: true
  NPM_CONFIG_NO_AUDIT: true
  NPM_CONFIG_FUND: false
  # Optimize Vite builds
  VITE_CJS_IGNORE_WARNING: true

jobs:
  # Job 1: Quality checks and testing
  quality:
    name: 🔍 Quality & Testing
    runs-on: ubuntu-latest
    timeout-minutes: 8
    if: ${{ !inputs.skip_tests }}

    outputs:
      cache-hit: ${{ steps.cache.outputs.cache-hit }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Needed for diff checks

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 💾 Cache dependencies
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .vite
          key: ${{ runner.os }}-deps-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-${{ env.CACHE_VERSION }}-
            ${{ runner.os }}-deps-

      - name: 📦 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit --no-fund

      - name: 🔍 Run pre-commit checks
        run: npm run precommit

      - name: 🧪 Run tests with coverage
        run: npm run test:coverage

      - name: 📊 Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  # Job 2: Build and deployment
  build-deploy:
    name: 🔨 Build & Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 12
    needs: [quality]
    if: always() && (needs.quality.result == 'success' || inputs.skip_tests)

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 💾 Restore cached dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .vite
          key: ${{ runner.os }}-deps-${{ env.CACHE_VERSION }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-deps-${{ env.CACHE_VERSION }}-

      - name: 📦 Install dependencies
        if: needs.quality.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --no-audit --no-fund

      - name: 🔧 Fix Rollup dependencies
        run: npm run fix:rollup

      - name: 🔨 Build project
        run: npm run build
        env:
          NODE_OPTIONS: '--max-old-space-size=4096'

      - name: 📊 Run performance monitoring
        run: npm run performance
        continue-on-error: true

      - name: 📈 Analyze bundle size
        run: |
          echo "### 📦 Bundle Analysis" >> $GITHUB_STEP_SUMMARY
          if [ -d "dist" ]; then
            echo "**Build successful!** ✅" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| File | Size |" >> $GITHUB_STEP_SUMMARY
            echo "|------|------|" >> $GITHUB_STEP_SUMMARY
            find dist -type f -name "*.js" -o -name "*.css" | head -10 | while read file; do
              size=$(du -h "$file" | cut -f1)
              filename=$(basename "$file")
              echo "| $filename | $size |" >> $GITHUB_STEP_SUMMARY
            done
          else
            echo "**Build failed!** ❌" >> $GITHUB_STEP_SUMMARY
          fi

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: weather-app-build-${{ github.sha }}
          path: dist/
          retention-days: 30

      # Preview deployment for PRs
      - name: 🔍 Deploy to Preview
        if: github.event_name == 'pull_request' || inputs.environment == 'preview'
        run: |
          echo "🚀 Deploying Weather App to preview environment..."
          echo "📱 Preview URL: https://preview-weather-app.netlify.app"
          echo "### 🔍 Preview Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Weather App has been deployed to preview environment!" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Preview](https://preview-weather-app.netlify.app)" >> $GITHUB_STEP_SUMMARY

      # Production deployment for main branch
      - name: 🚀 Deploy to Production
        if: github.ref == 'refs/heads/main' && (inputs.environment == 'production' || inputs.environment == '')
        run: |
          echo "🚀 Deploying Weather App to production..."
          echo "🌍 Production URL: https://weather-app.netlify.app"
          echo "### 🚀 Production Deployment" >> $GITHUB_STEP_SUMMARY
          echo "Weather App has been successfully deployed to production!" >> $GITHUB_STEP_SUMMARY
          echo "🔗 [View Live Site](https://weather-app.netlify.app)" >> $GITHUB_STEP_SUMMARY

      - name: 📱 Update mobile deployment status
        if: github.ref == 'refs/heads/main'
        run: |
          echo "📱 Mobile deployment status updated"
          echo "### 📱 Mobile Features" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Pull-to-refresh functionality" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Touch gestures and haptic feedback" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ iOS-style navigation" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Dark/light theme system" >> $GITHUB_STEP_SUMMARY

  # Job 3: Health check after deployment
  health-check:
    name: 🩺 Health Check
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [build-deploy]
    if: always() && needs.build-deploy.result == 'success'

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci --prefer-offline --no-audit --no-fund

      - name: 🩺 Run health check
        run: npm run health

      - name: 🌐 Test API endpoints
        run: npm run apis
        continue-on-error: true

      - name: 📊 Generate deployment report
        run: |
          echo "### 🎉 Deployment Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Weather App** has been successfully deployed with the following features:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🌤️ **Core Features:**" >> $GITHUB_STEP_SUMMARY
          echo "- Real-time weather data (OpenMeteo API)" >> $GITHUB_STEP_SUMMARY
          echo "- Location search (Nominatim geocoding)" >> $GITHUB_STEP_SUMMARY
          echo "- 24-hour and 7-day forecasts" >> $GITHUB_STEP_SUMMARY
          echo "- Animated weather icons" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📱 **Mobile Features:**" >> $GITHUB_STEP_SUMMARY
          echo "- Pull-to-refresh functionality" >> $GITHUB_STEP_SUMMARY
          echo "- Touch gestures and haptic feedback" >> $GITHUB_STEP_SUMMARY
          echo "- iOS 26 design system integration" >> $GITHUB_STEP_SUMMARY
          echo "- Responsive glassmorphism UI" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎨 **UI/UX:**" >> $GITHUB_STEP_SUMMARY
          echo "- Dark/light theme system" >> $GITHUB_STEP_SUMMARY
          echo "- Smooth animations and transitions" >> $GITHUB_STEP_SUMMARY
          echo "- Modern glassmorphism design" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility compliant (WCAG)" >> $GITHUB_STEP_SUMMARY
