name: Branch Protection Setup

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to protect'
        required: true
        default: 'main'

permissions:
  contents: read

jobs:
  protect:
    name: Configure branch protection
    runs-on: ubuntu-latest
    steps:
      - name: Validate admin token
        id: gate
        run: |
          if [ -z "${{ secrets.ADMIN_TOKEN }}" ]; then
            echo "has_token=false" >> $GITHUB_OUTPUT
            echo "::notice::ADMIN_TOKEN not configured; cannot set branch protection automatically." \
              "Add a repo/org secret named ADMIN_TOKEN with 'repo' admin scope to enable."
          else
            echo "has_token=true" >> $GITHUB_OUTPUT
          fi

      - name: Apply protection (required checks)
        if: steps.gate.outputs.has_token == 'true'
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.ADMIN_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const branch = core.getInput('branch');

            // These must exactly match the status check contexts produced by the matrix jobs
            const contexts = [
              'Quality Gate / Lint • Style • Types • Test • Build (ubuntu-latest)',
              'Quality Gate / Lint • Style • Types • Test • Build (windows-latest)'
            ];

            try {
              await github.rest.repos.updateBranchProtection({
                owner,
                repo,
                branch,
                required_status_checks: {
                  strict: true,
                  contexts,
                },
                enforce_admins: true,
                required_pull_request_reviews: {
                  dismiss_stale_reviews: true,
                  required_approving_review_count: 1,
                },
                restrictions: null,
              });

              core.summary
                .addHeading('Branch protection configured')
                .addRaw(`Branch: ${branch}\n`)
                .addList(contexts.map((c) => `Required: ${c}`))
                .write();
            } catch (err) {
              const msg = err?.message || String(err);
              const status = err?.status;
              const data = err?.response?.data;
              core.error(`Failed to apply branch protection: ${msg}`);
              if (status) core.error(`HTTP status: ${status}`);
              if (data) core.error(`Response: ${JSON.stringify(data)}`);
              core.setFailed('Branch protection update failed. See errors above.');
            }

      - name: Summary (manual steps)
        if: steps.gate.outputs.has_token != 'true'
        run: |
          echo "## Branch protection not applied" >> $GITHUB_STEP_SUMMARY
          echo "Add repo/org secret 'ADMIN_TOKEN' (Personal Access Token with repo:admin) and re-run." >> $GITHUB_STEP_SUMMARY
          echo "Will set required checks:" >> $GITHUB_STEP_SUMMARY
          echo "- Quality Gate / Lint • Style • Types • Test • Build (ubuntu-latest)" >> $GITHUB_STEP_SUMMARY
          echo "- Quality Gate / Lint • Style • Types • Test • Build (windows-latest)" >> $GITHUB_STEP_SUMMARY
