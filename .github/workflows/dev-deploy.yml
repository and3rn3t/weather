name: 🧪 Development Deploy

on:
  push:
    branches: [dev, develop, staging]
    paths-ignore:
      - 'docs/**'
      - '**/*.md'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: false
        default: 'development'
        type: choice
        options:
          - development
          - staging
          - preview

permissions:
  contents: read
  deployments: write
  pull-requests: read

concurrency:
  group: dev-deploy-${{ github.ref_name }}
  cancel-in-progress: true

env:
  NODE_VERSION: '22.12.0'
  NPM_CONFIG_PREFER_OFFLINE: true
  NPM_CONFIG_NO_AUDIT: true
  NPM_CONFIG_NO_FUND: true
  NPM_CONFIG_PROGRESS: false
  NPM_CONFIG_LOGLEVEL: error
  VITE_CJS_IGNORE_WARNING: true
  NODE_OPTIONS: '--max-old-space-size=4096'

jobs:
  dev-deploy:
    if: >
      !(
        github.event_name == 'push' &&
        (contains(github.event.head_commit.message, '[skip ci]') || contains(github.event.head_commit.message, '[ci skip]'))
      )
    name: 🧪 Development Deploy
    runs-on: ubuntu-latest
    timeout-minutes: 8
    environment:
      name: ${{ inputs.environment || 'development' }}
      url: ''

    steps:
      - name: ⚡ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: ⚡ Setup Node.js + Cache
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: ♻️ Cache ESLint
        uses: actions/cache@v4
        with:
          path: .eslintcache
          key: eslint-${{ runner.os }}-${{ hashFiles('**/*.ts', '**/*.tsx', 'eslint.config.js', 'package-lock.json') }}
          restore-keys: |
            eslint-${{ runner.os }}-

      - name: ♻️ Cache Vite
        uses: actions/cache@v4
        with:
          path: |
            node_modules/.vite
          key: vite-${{ runner.os }}-${{ hashFiles('vite.config.ts', 'package-lock.json') }}-${{ hashFiles('src/**/*') }}
          restore-keys: |
            vite-${{ runner.os }}-

      - name: ⚡ Install dependencies
        run: |
          npm ci --prefer-offline --no-audit --no-fund --silent

      - name: 🔍 Quality checks (non-blocking)
        run: |
          npx eslint . --cache --cache-location .eslintcache || echo "⚠️ Lint warnings (non-blocking)"
        continue-on-error: true

      - name: ✨ Prettier check
        run: |
          npm run format:check

      - name: 🏗️ Build for development (with fallback)
        run: |
          npm run build:ultra || npm run build:fallback
        env:
          VITE_ENVIRONMENT: ${{ inputs.environment || 'development' }}

      - name: Deploy preflight (secrets present)
        if: ${{ github.event_name == 'push' && (github.ref_name == 'dev' || github.ref_name == 'develop' || github.ref_name == 'staging') && github.repository == 'and3rn3t/weather' }}
        run: |
          missing=0
          [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ] && echo "❌ Missing secret: CLOUDFLARE_API_TOKEN" && missing=1 || echo "✅ CLOUDFLARE_API_TOKEN present"
          [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ] && echo "❌ Missing secret: CLOUDFLARE_ACCOUNT_ID" && missing=1 || echo "✅ CLOUDFLARE_ACCOUNT_ID present"
          if [ "$missing" -ne 0 ]; then
            echo "::error::Required Cloudflare secrets are missing; aborting deploy." && exit 1
          fi

      - name: 🚀 Deploy to Cloudflare Pages (pipeline only)
        if: ${{ github.event_name == 'push' && (github.ref_name == 'dev' || github.ref_name == 'develop' || github.ref_name == 'staging') && github.repository == 'and3rn3t/weather' }}
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: pages deploy dist --project-name=weather --branch=${{ github.ref_name }} --commit-hash=${{ github.sha }}

      - name: Dry-run preflight (manual dispatch)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "# Dev Dry-run preflight" >> $GITHUB_STEP_SUMMARY
          echo "Event: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "Branch: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            echo "❌ Missing secret: CLOUDFLARE_API_TOKEN" | tee -a $GITHUB_STEP_SUMMARY
          else
            echo "✅ CLOUDFLARE_API_TOKEN present" | tee -a $GITHUB_STEP_SUMMARY
          fi
          if [ -z "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}" ]; then
            echo "❌ Missing secret: CLOUDFLARE_ACCOUNT_ID" | tee -a $GITHUB_STEP_SUMMARY
          else
            echo "✅ CLOUDFLARE_ACCOUNT_ID present" | tee -a $GITHUB_STEP_SUMMARY
          fi
          echo "Deploy step is gated: event=push AND branch in [dev,develop,staging] AND repo=and3rn3t/weather" >> $GITHUB_STEP_SUMMARY

      - name: 📋 Deployment Summary
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "## 🧪 Development Deploy Complete!" >> $GITHUB_STEP_SUMMARY
          echo "**Environment**: ${{ inputs.environment || 'Development' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ github.ref_name }}" = "dev" ] || [ "${{ github.ref_name }}" = "develop" ]; then
            echo "🧪 **Development**: https://weather-dev.andernet.dev" >> $GITHUB_STEP_SUMMARY
          fi
          echo "🔗 **Cloudflare**: https://${{ github.ref_name }}.weather.pages.dev" >> $GITHUB_STEP_SUMMARY
